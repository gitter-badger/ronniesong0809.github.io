<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Ronnie</title>
  
  <subtitle>Ronnie&#39;s Blog</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-11-05T21:01:10.826Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Ronnie Song</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Note for Dockerfile</title>
    <link href="http://yoursite.com/2018/11/05/Note-for-Dockerfile/"/>
    <id>http://yoursite.com/2018/11/05/Note-for-Dockerfile/</id>
    <published>2018-11-05T20:38:19.000Z</published>
    <updated>2018-11-05T21:01:10.826Z</updated>
    
    <content type="html"><![CDATA[<p>Example:</p><ul><li>Dockerfile.nodejs</li></ul>  <figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Use the NodeJs v8.0.0 as the base image</span></span><br><span class="line"> <span class="keyword">FROM</span> node:<span class="number">8.0</span>.<span class="number">0</span></span><br><span class="line"> </span><br><span class="line"> <span class="comment"># pecify your e-mail address as the maintainer of the container image</span></span><br><span class="line"> <span class="keyword">MAINTAINER</span> ronnie <span class="string">"ronsong@pdx.edu"</span></span><br><span class="line"> </span><br><span class="line"> <span class="comment"># Copy the contents of the current directory into the container directory /app</span></span><br><span class="line"> <span class="keyword">ADD</span> . /app/</span><br><span class="line"> </span><br><span class="line"> # Set the working directory of the container to /app</span><br><span class="line"> WORKDIR /app</span><br><span class="line"> </span><br><span class="line"> # Execute apt-get update and install to get npm and node-sass</span><br><span class="line"> RUN npm install</span><br><span class="line"> RUN npm rebuild node-sass --force</span><br><span class="line"> </span><br><span class="line"> # ENV port</span><br><span class="line"> ENV HOST 0.0.0.0</span><br><span class="line"> ENV PORT 8000</span><br><span class="line"> </span><br><span class="line"> # Container expose port</span><br><span class="line"> EXPOSE 8000</span><br><span class="line"> </span><br><span class="line"> # Set the parameters to the program</span><br><span class="line"> CMD ["npm", "start"]</span><br></pre></td></tr></table></figure><p>For the keyword in Dockerfile：</p><ul><li><p>FROM</p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Usage: <span class="keyword">FROM</span> &lt;image&gt;[:&lt;tag&gt;]</span><br><span class="line">解释：设置要制作的镜像基于哪个镜像，<span class="keyword">FROM</span>指令必须是整个Dockerfile的第一个指令，如果指定的镜像不存在默认会自动从Docker Hub上下载。</span><br></pre></td></tr></table></figure></li><li><p>MAINTAINER</p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Usage: <span class="keyword">MAINTAINER</span> &lt;name&gt;</span><br><span class="line">解释：<span class="keyword">MAINTAINER</span>指令允许你给将要制作的镜像设置作者信息。</span><br></pre></td></tr></table></figure></li><li><p>ADD</p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Usage: <span class="keyword">ADD</span> &lt;src&gt; &lt;dest&gt;</span><br><span class="line">解释：ADD指令用于从指定路径拷贝一个文件或目录到容器的指定路径中，&lt;src&gt;是一个文件或目录的路径，也可以是一个url，路径是相对于该Dockerfile文件所在位置的相对路径，&lt;dest&gt;是目标容器的一个绝对路径。</span><br></pre></td></tr></table></figure></li><li><p>WORKDIR</p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">语法: <span class="keyword">WORKDIR</span> /path/to/workdir</span><br><span class="line">解释：WORKDIR指令用于设置Dockerfile中的RUN、CMD和ENTRYPOINT指令执行命令的工作目录(默认为/目录)，该指令在Dockerfile文件中可以出现多次，如果使用相对路径则为相对于WORKDIR上一次的值，例如WORKDIR /data，WORKDIR logs，RUN pwd最终输出的当前目录是/data/logs。</span><br></pre></td></tr></table></figure></li><li><p>RUN</p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Usage: ① <span class="keyword">RUN</span> &lt;command&gt;   #将会调用/bin/sh -c &lt;command&gt;</span><br><span class="line">       ② RUN ["executable", "param1", "param2"] #将会调用exec执行，以避免有些时候shell方式执行时的传递参数问题，而且有些基础镜像可能不包含/bin/sh</span><br><span class="line">解释：RUN指令会在一个新的容器中执行任何命令，然后把执行后的改变提交到当前镜像，提交后的镜像会被用于Dockerfile中定义的下一步操作，RUN中定义的命令会按顺序执行并提交，这正是Docker廉价的提交和可以基于镜像的任何一个历史点创建容器的好处，就像版本控制工具一样。</span><br></pre></td></tr></table></figure></li><li><p>ENV</p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Usage: <span class="keyword">ENV</span> &lt;key&gt; &lt;value&gt;</span><br><span class="line">解释：<span class="keyword">ENV</span>指令用于设置环境变量，在Dockerfile中这些设置的环境变量也会影响到<span class="keyword">RUN</span>指令，当运行生成的镜像时这些环境变量依然有效，如果需要在运行时更改这些环境变量可以在运行docker run时添加–env &lt;key&gt;=&lt;value&gt;参数来修改。</span><br><span class="line">注意：最好不要定义那些可能和系统预定义的环境变量冲突的名字，否则可能会产生意想不到的结果。</span><br></pre></td></tr></table></figure></li><li><p>EXPOSE</p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Usage: <span class="keyword">EXPOSE</span> &lt;port&gt; [ ...]</span><br><span class="line">解释: <span class="keyword">EXPOSE</span>指令用来告诉Docker这个容器在运行时会监听哪些端口，Docker在连接不同的容器(使用–link参数)时使用这些信息。</span><br></pre></td></tr></table></figure></li><li><p>CMD</p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Usage: ① <span class="keyword">CMD</span> ["executable", "param1", "param2"]    #将会调用exec执行，首选方式</span><br><span class="line">       ② CMD ["param1", "param2"]        #当使用ENTRYPOINT指令时，为该指令传递默认参数</span><br><span class="line">      ③ CMD &lt;command&gt; [ &lt;param1&gt;|&lt;param2&gt; ]        #将会调用/bin/sh -c执行</span><br><span class="line">解释：CMD指令中指定的命令会在镜像运行时执行，在Dockerfile中只能存在一个，如果使用了多个CMD指令，则只有最后一个CMD指令有效。当出现ENTRYPOINT指令时，CMD中定义的内容会作为ENTRYPOINT指令的默认参数，也就是说可以使用CMD指令给ENTRYPOINT传递参数。</span><br><span class="line">注意：RUN和CMD都是执行命令，他们的差异在于RUN中定义的命令会在执行docker build命令创建镜像时执行，而CMD中定义的命令会在执行docker run命令运行镜像时执行，另外使用第一种语法也就是调用exec执行时，命令必须为绝对路径。</span><br></pre></td></tr></table></figure></li></ul><p>Other examples:</p><ul><li>Dockerfile.ubuntu</li></ul>  <figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Use Ubuntu 18.04 as the base image</span></span><br><span class="line"><span class="keyword">FROM</span> ubuntu:<span class="number">18.04</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Specify your e-mail address as the maintainer of the container image</span></span><br><span class="line"><span class="keyword">MAINTAINER</span> Your Name <span class="string">"ronsong@pdx.edu"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Execute apt-get update and install to get Python's package manager</span></span><br><span class="line"><span class="comment">#  installed (pip)</span></span><br><span class="line"><span class="keyword">RUN</span> apt-get update -y</span><br><span class="line">RUN apt-get install -y python-pip</span><br><span class="line"></span><br><span class="line"># Copy the contents of the current directory into the container directory /app</span><br><span class="line">COPY . /app</span><br><span class="line"></span><br><span class="line"># Set the working directory of the container to /app</span><br><span class="line">WORKDIR /app</span><br><span class="line"></span><br><span class="line"># Install the Python packages specified by requirements.txt into the container</span><br><span class="line">RUN pip install -r requirements.txt</span><br><span class="line"></span><br><span class="line"># Set the program that is invoked upon container instantiation</span><br><span class="line">ENTRYPOINT ["python"]</span><br><span class="line"></span><br><span class="line"># Set the parameters to the program</span><br><span class="line">CMD ["app.py"]</span><br></pre></td></tr></table></figure><ul><li>Dockerfile.alpine</li></ul>  <figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Use the Python version of alpine as the base image</span></span><br><span class="line"><span class="keyword">FROM</span> python:alpine</span><br><span class="line"></span><br><span class="line"><span class="comment"># Specify your e-mail address as the maintainer of the container image</span></span><br><span class="line"><span class="keyword">MAINTAINER</span> Your Name <span class="string">"ronsong@pdx.edu"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Copy the contents of the current directory into the container directory /app</span></span><br><span class="line"><span class="keyword">COPY</span> . /app</span><br><span class="line"></span><br><span class="line"># Set the working directory of the container to /app</span><br><span class="line">WORKDIR /app</span><br><span class="line"></span><br><span class="line"># Install the Python packages specified by requirements.txt into the container</span><br><span class="line">RUN pip install -r requirements.txt</span><br><span class="line"></span><br><span class="line"># Set the program that is invoked upon container instantiation</span><br><span class="line">ENTRYPOINT ["python"]</span><br><span class="line"></span><br><span class="line"># Set the parameters to the program</span><br><span class="line">CMD ["app.py"]</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Example:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Dockerfile.nodejs&lt;/li&gt;
&lt;/ul&gt;
  &lt;figure class=&quot;highlight dockerfile&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=
      
    
    </summary>
    
      <category term="note" scheme="http://yoursite.com/categories/note/"/>
    
    
      <category term="note" scheme="http://yoursite.com/tags/note/"/>
    
  </entry>
  
  <entry>
    <title>Hello World!</title>
    <link href="http://yoursite.com/2018/11/01/Hello-World/"/>
    <id>http://yoursite.com/2018/11/01/Hello-World/</id>
    <published>2018-11-01T20:27:42.000Z</published>
    <updated>2018-11-04T11:33:15.847Z</updated>
    
    <content type="html"><![CDATA[<p>This is my very first post.</p><h3 id="C"><a href="#C" class="headerlink" title="C"></a>C</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span>&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"Hello World"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="C-1"><a href="#C-1" class="headerlink" title="C++"></a>C++</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"Hello World"</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Java"><a href="#Java" class="headerlink" title="Java"></a>Java</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args&#123;</span></span></span><br><span class="line"><span class="function"><span class="params">        system.out.printIn(<span class="string">"Hello World"</span>)</span></span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Shell"><a href="#Shell" class="headerlink" title="Shell"></a>Shell</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span> echo "Hello World"</span><br></pre></td></tr></table></figure><h3 id="Python-3"><a href="#Python-3" class="headerlink" title="Python 3"></a>Python 3</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">print(<span class="string">"Hello World"</span>)</span><br></pre></td></tr></table></figure><h3 id="Python-2"><a href="#Python-2" class="headerlink" title="Python 2"></a>Python 2</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">print</span> <span class="string">"Hello World"</span></span><br></pre></td></tr></table></figure><h3 id="C-2"><a href="#C-2" class="headerlink" title="C"></a>C</h3><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Program</span> &#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span>(<span class="params">String args</span>)</span> &#123;</span><br><span class="line">        Console.WriteLine(<span class="string">"Hello World"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="HTML"><a href="#HTML" class="headerlink" title="HTML"></a>HTML</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Hello World</span><br></pre></td></tr></table></figure><h3 id="Console"><a href="#Console" class="headerlink" title="Console"></a>Console</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(<span class="string">"Hello World"</span>)</span><br></pre></td></tr></table></figure><h3 id="JavaScript"><a href="#JavaScript" class="headerlink" title="JavaScript"></a>JavaScript</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">document</span>.write(<span class="string">"Hello World"</span>);</span><br></pre></td></tr></table></figure><h3 id="jQuery"><a href="#jQuery" class="headerlink" title="jQuery"></a>jQuery</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">"body"</span>).append(<span class="string">"Hello World"</span>);</span><br></pre></td></tr></table></figure><h2 id="Ruby"><a href="#Ruby" class="headerlink" title="Ruby"></a>Ruby</h2><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">puts <span class="string">"Hello World"</span></span><br></pre></td></tr></table></figure><h3 id="Haskell"><a href="#Haskell" class="headerlink" title="Haskell"></a>Haskell</h3><figure class="highlight haskell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt;print <span class="string">"Hello World"</span></span><br></pre></td></tr></table></figure><h3 id="Go"><a href="#Go" class="headerlink" title="Go"></a>Go</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"><span class="keyword">import</span> <span class="string">"fmt"</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    fmt.Printf(<span class="string">"Hello World"</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Object-C"><a href="#Object-C" class="headerlink" title="Object-C"></a>Object-C</h3><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#import <span class="meta-string">&lt;Foundation/Foundation.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> main(<span class="keyword">void</span>) &#123;</span><br><span class="line">    <span class="keyword">@autoreleasepool</span> &#123;</span><br><span class="line">      <span class="built_in">NSlog</span>(<span class="string">@"Hello World"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Rust"><a href="#Rust" class="headerlink" title="Rust"></a>Rust</h3><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">fn</span> <span class="title">main</span></span>() &#123;</span><br><span class="line">    printIn!(<span class="string">"Hello World"</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Swift"><a href="#Swift" class="headerlink" title="Swift"></a>Swift</h3><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@IBOutlet</span> <span class="keyword">weak</span> <span class="keyword">var</span> label: <span class="type">UILbal</span>!</span><br><span class="line"><span class="meta">@IBAction</span> <span class="function"><span class="keyword">func</span> <span class="title">onclick</span><span class="params">(sender: AnyObject)</span></span> &#123;</span><br><span class="line">    label.text = <span class="string">"Hello World"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;This is my very first post.&lt;/p&gt;
&lt;h3 id=&quot;C&quot;&gt;&lt;a href=&quot;#C&quot; class=&quot;headerlink&quot; title=&quot;C&quot;&gt;&lt;/a&gt;C&lt;/h3&gt;&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td
      
    
    </summary>
    
      <category term="coding" scheme="http://yoursite.com/categories/coding/"/>
    
    
      <category term="code" scheme="http://yoursite.com/tags/code/"/>
    
  </entry>
  
</feed>
